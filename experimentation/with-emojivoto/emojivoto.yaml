---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: psp-emojivoto
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
spec:
  privileged: false
  # Required to prevent escalations to root.
  allowPrivilegeEscalation: false
  allowedCapabilities:
    # The initContainer for LD2 requires this capability to operate. It is
    # unsafe and *should* be removed.
    - NET_ADMIN
    - NET_RAW
  requiredDropCapabilities:
    - SETPCAP
    - MKNOD
    - AUDIT_WRITE
    - CHOWN
    - DAC_OVERRIDE
    - FOWNER
    - FSETID
    - KILL
    - SETGID
    - SETUID
    - NET_BIND_SERVICE
    - SYS_CHROOT
    - SETFCAP
  # Allow core volume types.
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    # Assume that persistentVolumes set up by the cluster admin are safe to use.
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
    # The initContainer for LD2 requires running as root to install the
    # iptables rules. This *should* be set.
    # rule: 'MustRunAsNonRoot'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: emoji
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: voting
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: web
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role-psp-emojivoto
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  resourceNames: ['psp-emojivoto']
  verbs: ['use']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rb-psp-emojivoto
roleRef:
  kind: Role
  name: role-psp-emojivoto
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: emoji
- kind: ServiceAccount
  name: voting
- kind: ServiceAccount
  name: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emoji
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emoji-svc
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: emoji-svc
        custom-affinity: emojivoto
    spec:
      serviceAccountName: emoji
      containers:
      - env:
        - name: GRPC_PORT
          value: "8080"
        image: buoyantio/emojivoto-emoji-svc:v8
        name: emoji-svc
        ports:
        - containerPort: 8080
          name: grpc
        resources:
          requests:
            cpu: 100m
      affinity:
        # set this to podAffinity to force load generator and app on the same
        #  node.
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: custom-affinity
                operator: In
                values:
                - benchmark-load-generator
            topologyKey: "kubernetes.io/hostname"
            namespaces: ["benchmark-load-generator", "emojivoto"]
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: emoji-svc
spec:
  selector:
    app: emoji-svc
  clusterIP: None
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: voting
spec:
  replicas: 1
  selector:
    matchLabels:
      app: voting-svc
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: voting-svc
        custom-affinity: emojivoto
    spec:
      serviceAccountName: voting
      containers:
      - env:
        - name: GRPC_PORT
          value: "8080"
        image: buoyantio/emojivoto-voting-svc:v8
        name: voting-svc
        ports:
        - containerPort: 8080
          name: grpc
        resources:
          requests:
            cpu: 100m
      affinity:
        # set this to podAffinity to force load generator and app on the same
        #  node.
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: custom-affinity
                operator: In
                values:
                - benchmark-load-generator
            topologyKey: "kubernetes.io/hostname"
            namespaces: ["benchmark-load-generator", "emojivoto"]
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: voting-svc
spec:
  selector:
    app: voting-svc
  clusterIP: None
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-svc
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: web-svc
        custom-affinity: emojivoto
    spec:
      serviceAccountName: web
      containers:
      - env:
        - name: WEB_PORT
          value: "8080"
        - name: EMOJISVC_HOST
          value: emoji-svc:8080
        - name: VOTINGSVC_HOST
          value: voting-svc:8080
        - name: INDEX_BUNDLE
          value: dist/index_bundle.js
        image: buoyantio/emojivoto-web:v8
        name: web-svc
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            cpu: 100m
      affinity:
        # set this to podAffinity to force load generator and app on the same
        #  node.
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: custom-affinity
                operator: In
                values:
                - benchmark-load-generator
            topologyKey: "kubernetes.io/hostname"
            namespaces: ["benchmark-load-generator", "emojivoto"]
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: web-svc
spec:
  clusterIP: None
  selector:
    app: web-svc
  ports:
  - name: http
    port: 8080
    targetPort: 8080
---
# Not deploying VoteBot to reduce cluster background noise
#apiVersion: apps/v1beta1
#kind: Deployment
#metadata:
#  creationTimestamp: null
#  name: vote-bot
##spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: vote-bot
#  strategy: {}
#  template:
#    metadata:
#      creationTimestamp: null
#      labels:
#        app: vote-bot
#    spec:
#      containers:
#      - command:
#        - emojivoto-vote-bot
#        env:
#        - name: WEB_HOST
#          value: web-svc.emojivoto:8080
#        image: buoyantio/emojivoto-web:v8
#        name: vote-bot
#        resources:
#          requests:
#            cpu: 10m
#status: {}
#---
